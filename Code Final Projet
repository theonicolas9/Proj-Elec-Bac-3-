#include <TinyGPS++.h>
#include <SoftwareSerial.h>
#include <SD.h>
#include <LiquidCrystal_I2C.h> // Library for LCD

const int chipSelect = 10;

static const int RXPin = 4, TXPin = 5;
static const uint32_t GPSBaud = 4800;

File dataFile;
char filename[] = "LOGGER00.CSV";

// The TinyGPS++ object
TinyGPSPlus gps;

// The serial connection to the GPS device
SoftwareSerial ss(RXPin, TXPin);

LiquidCrystal_I2C lcd(0x27, 16, 2); // I2C address 0x27, 16 column and 2 rows
// For stats that happen every 5 seconds
//unsigned long last = 0UL;

float interval=5000; // ou mettre unsigned long interval = 5000; 
float intervalsec=0;
// float latitude = gps.location.lat();
// float longitude = gps.location.lng();
// int date_year = gps.date.year();
// int date_month = gps.date.month();
// int date_day = gps.date.day();
// int time_hour = gps.time.hour();
// int time_minute = gps.time.minute();
// int time_second = gps.time.second();
float speed_last=5; 
float darret =0.0; 
float c= 0.0; 
String message = "a";
unsigned long previousMillis=0; // millis() returns an unsigned long.
float speed_curr =0;
void setup()
{
  //New 
  lcd.init(); 
  lcd.backlight();       
  lcd.setCursor(0,0);
  lcd.print("Distance de ");
  lcd.setCursor(0,1);
  lcd.print("Securite :  "); 
  
  Serial.begin(9600);
  ss.begin(GPSBaud);

  Serial.print(F("Initializing SD card. "));
  // make sure that the default chip select pin is set to
  // output, even if you don't use it:
  pinMode(10, OUTPUT);
  
  // see if the card is present and can be initialized:
  if (!SD.begin(chipSelect)) {
    Serial.println(F("Card failed."));
    // don't do anything more:
    return;
  }
  Serial.println(F("Card initialized."));
  
// create a new file with a new filenumber
for (uint8_t i = 0; i < 100; i++) {
    filename[6] = i/10 + '0';
    filename[7] = i%10 + '0';
      if (! SD.exists(filename)) {
      // only open a new file if it doesn't exist
      dataFile = SD.open(filename, FILE_WRITE);
      break; // leave the loop
      }
      dataFile.close();
  }
if (! dataFile) {
  Serial.println("couldnt create file");
  }
  Serial.print("Logging to: ");
  Serial.println(filename);
  Serial.println("");  
  
    //_________________________Write Log File Header__________________________________________________
File dataFile = SD.open(filename, FILE_WRITE); 
  if (dataFile)
  {                                 
    dataFile.print(F("Latitude"));          
    dataFile.print(",");
    dataFile.print(F("Longitude"));
    dataFile.print(",");
    dataFile.print(F("Speed [km/h]"));
    dataFile.print(",");
    dataFile.print(F("Date"));
    dataFile.print(",");
    dataFile.println(F("Time"));
    dataFile.close();
  }
    Serial.print(F("Latitude"));          
    Serial.print(",");
    Serial.print(F("Longitude"));
    Serial.print(",");
    Serial.print(F("Speed"));
    Serial.print(",");
    Serial.print(F("Date"));
    Serial.print(",");
    Serial.println(F("Time"));
}

void loop()
{
     if (ss.available() > 0)                   // Simplement changer while en if -> OK 
    gps.encode(ss.read());
       
// // Dispatch incoming characters
//  if (ss.available() > 0)    {                // Simplement changer while en if -> OK 
//    message = ss.read();
//    gps.encode(&message);
//  }  
  if(gps.speed.isValid())
  {
    speed_curr = gps.speed.kmph();
  }
//   latitude = gps.location.lat();
//   longitude = gps.location.lng();
//   date_year = gps.date.year();
//   date_month = gps.date.month();
//   date_day = gps.date.day();
//   time_hour = gps.time.hour();
//   time_minute = gps.time.minute();
//   time_second = gps.time.second();
      
    if ( speed_curr ) {
    int val = speed_curr;
    
    switch( val ) {
      case 0 ... 29:
      interval = 1; // Intervalle de 10 secondes pour les vitesses <= 30 km/h
      intervalsec= interval/1000;
     // limit=30;
        break;
      case 30 ... 49:
      interval =  1; // Intervalle de 10 secondes pour les vitesses <= 50 km/h
      intervalsec= interval/1000;
    //  limit=50;
       
        break;
      default:
      interval = 1; // Intervalle de 2secondes pour les vitesses > 50 km/h
      intervalsec= interval/1000;    
        break;
    }  
  }   
if ((unsigned long)(millis() - previousMillis) >= interval) { //Logintervall
    previousMillis = millis();
    
if (gps.location.isUpdated())
  {

    File dataFile = SD.open(filename, FILE_WRITE);
    
    dataFile.print(gps.location.lat(), 6);                //print location data
    dataFile.print(F(","));
    Serial.print(F("- latitude : ")); 
    Serial.println( gps.location.lat() );
    
    dataFile.print(gps.location.lng(), 6);
    dataFile.print(F(","));
    Serial.print(F("- longitude : ")); 
    Serial.println( gps.location.lng() );

    dataFile.print(gps.speed.kmph());                    //print speed
    dataFile.print(F(","));
    Serial.print(F("- speed_curr : "));  
    Serial.println( speed_curr );
    
    if (gps.date.day()<10){  // Print date. Add a leading zero, if necessary.
     dataFile.print(0);
     }
    dataFile.print(gps.date.day());
    dataFile.print(F("."));
    Serial.print(F("- date_day : ")); 
    Serial.println( gps.date.day() );
    
    if (gps.date.month()<10){  // Add a zero, if necessary, as above
     dataFile.print(0);
     }
    dataFile.print(gps.date.month());
    dataFile.print(F("."));
    Serial.print(F("- date_month : "));  
    Serial.println( gps.date.month() );
    
    dataFile.print(gps.date.year());
    dataFile.print(F(","));
    Serial.print(F("- date_year : ")); 
    Serial.println( gps.date.year() );

    if (gps.time.hour()<10){            //Print GMT time. Add a zero, if necessary, as above
     dataFile.print(0);
     }
    dataFile.print(gps.time.hour());
    dataFile.print(F(":"));
    Serial.print(F("- time_hour : ")); 
    Serial.println( gps.time.hour() );
   
    if (gps.time.minute()<10){  // Add a zero, if necessary, as above
     dataFile.print(0);
     }
    dataFile.print(gps.time.minute());
    dataFile.print(F(":"));
    Serial.print(F("- time_minute : ")); 
    Serial.println( gps.time.minute() );
    
    if (gps.time.second()<10){  // Add a zero, if necessary, as above
     dataFile.print(0);
     }
    dataFile.println(gps.time.second());
//    dataFile.print(F(","));
    Serial.print(F("- time_second : ")); 
    Serial.println( gps.time.second() );


//New
     if ( speed_curr != speed_last ) 
            {
                int meteo = 0; // 0 pour un temps sec, 1 pour un temps de pluie et 2 pour un temps enneigé/verglacé
              c= speed_curr/3,6;  
               switch( meteo) {
                  case 0 : // route sèche
                    darret = c*2;
                    break;
                  case 1 :  // route mouillé
                    darret = c*3;
                    break;
                  default:  // route enneigée ou verglacée
                    darret = c*2;
                    break;
                }
             lcd.setCursor(10,1);
             lcd.print(darret);
             lcd.setCursor(14,1);         // Si des bugs bizzare, peu être que ça peut faire bugger 
             lcd.print(" m");
//             Serial.print(F("- Distance d'arrêt : ")); 
//             Serial.println( darret );
             speed_last = speed_curr;
            }
        Serial.print(F("- Distance d'arrêt : ")); 
        Serial.println( darret );   
        Serial.println("");   
        dataFile.close();
  }
 }
}




//
//    Serial.println(F("Test"));    
//    dataFile.print(latitude, 6);                //print location data
//    dataFile.print(F(","));
//    dataFile.print(longitude, 6);
//    dataFile.print(F(","));
//
//    dataFile.print(speed_curr);                    //print speed
//    dataFile.print(F(","));
//
//    if (gps.date.day()<10){  // Print date. Add a leading zero, if necessary.
//     dataFile.print(0);
//     }
//    dataFile.print(date_day);
//    dataFile.print(F("."));
//    
//    if (gps.date.month()<10){  // Add a zero, if necessary, as above
//     dataFile.print(0);
//     }
//    dataFile.print(date_month);
//    dataFile.print(F("."));
//    
//    dataFile.print(date_year);
//    dataFile.print(F(","));
//
//    if (gps.time.hour()<10){            //Print GMT time. Add a zero, if necessary, as above
//     dataFile.print(0);
//     }
//    dataFile.print(time_hour);
//    dataFile.print(F(":"));
//    
//    if (gps.time.minute()<10){  // Add a zero, if necessary, as above
//     dataFile.print(0);
//     }
//    dataFile.print(time_minute);
//    dataFile.print(F(":"));
//    
//    if (gps.time.second()<10){  // Add a zero, if necessary, as above
//     dataFile.print(0);
//     }
//    dataFile.println(time_second);
////    dataFile.print(F(","));
